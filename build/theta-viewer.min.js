!function($){"use strict";var ThetaViewer=function(element,texture){function createRenderer(that,element){that.renderer=new THREE.WebGLRenderer({antialias:!0}),that.renderer.setSize(element.width(),element.height()),that.renderer.setClearColor(0,1),$(element).append(that.renderer.domElement)}function buildScene(that){that.scene=new THREE.Scene}function createLight(that){var ambient=new THREE.AmbientLight(16777215);that.scene.add(ambient)}function createCamera(that){var fov=72,aspect=element.width()/element.height(),near=.1,far=1e3;that.camera=new THREE.PerspectiveCamera(fov,aspect,near,far),that.camera.lookAt({x:1,y:0,z:0}),that.scene.add(that.camera)}function buildGeomtry(that,texture){var thetaStart,thetaLength,matrix,radius=1,widthSegments=32,heightSegments=16,phiStart=0,phiLength=2*Math.PI;thetaLength=2*Math.PI*texture.image.height/texture.image.width,thetaLength>Math.PI&&(thetaLength=Math.PI),thetaStart=(Math.PI-thetaLength)/2,that.geometry=new THREE.SphereGeometry(radius,widthSegments,heightSegments,phiStart,phiLength,thetaStart,thetaLength),matrix=(new THREE.Matrix4).makeScale(1,1,-1),that.geometry.applyMatrix(matrix)}function buildMaterial(that,texture){that.material=new THREE.MeshBasicMaterial({overdraw:!0,map:texture,side:THREE.FrontSide})}function createMesh(that){that.mesh=new THREE.Mesh(that.geometry,that.material),that.scene.add(that.mesh)}function addEventListeners(that,element){function onResize(){camera.aspect=element.width()/element.height(),camera.updateProjectionMatrix(),renderer.setSize(element.width(),element.height())}function onMouseDown(event){event.preventDefault(),isRotating=!0,onMouseDownLat=lat,onMouseDownLng=lng,onMouseDownX=event.clientX,onMouseDownY=event.clientY}function onMouseMove(event){var phi,theta;event.preventDefault(),isRotating===!0&&(lat=.1*(event.clientY-onMouseDownY)+onMouseDownLat,lat=Math.max(-85,Math.min(85,lat)),lng=.1*(onMouseDownX-event.clientX)+onMouseDownLng,phi=(90-lat)*Math.PI/180,theta=lng*Math.PI/180,camera.lookAt({x:Math.sin(phi)*Math.cos(theta),y:Math.cos(phi),z:Math.sin(phi)*Math.sin(theta)}))}function onMouseUp(){isRotating=!1}function onMouseWheel(event){var fov=camera.fov,fovMin=20,fovMax=150;event.preventDefault(),event.wheelDeltaY?fov-=.05*event.wheelDeltaY:event.wheelDelta?fov-=.05*event.wheelDelta:event.detail&&(fov+=event.detail),fovMin>fov&&(fov=fovMin),fov>fovMax&&(fov=fovMax),camera.fov=fov,camera.updateProjectionMatrix()}var isRotating=!1,onMouseDownLat=0,onMouseDownLng=0,onMouseDownX=0,onMouseDownY=0,lat=0,lng=0,camera=that.camera,renderer=that.renderer;$(element).on("mousedown",onMouseDown).on("mousemove",onMouseMove).on("mouseup",onMouseUp).on("mouseout",onMouseUp).on("resize",onResize),$(element).get(0).addEventListener("mousewheel",onMouseWheel,!1),$(element).get(0).addEventListener("DOMMouseScroll",onMouseWheel,!1)}createRenderer(this,element),buildScene(this),createLight(this),createCamera(this),buildGeomtry(this,texture),buildMaterial(this,texture),createMesh(this),addEventListeners(this,element),this.render=function(that){return function(){requestAnimationFrame(that.render),that.renderer.render(that.scene,that.camera)}}(this)};$.fn.createThetaViewerWithTexture=function(texture){var thetaViewer=new ThetaViewer(this,texture);return thetaViewer.render(),this},$.fn.createThetaViewer=function(image_url){var texture,mapping,that=this,success=function(){var thetaViewer=new ThetaViewer(that,texture);thetaViewer.render()},error=function(){console.log("loading error: "+image_url)};return mapping=void 0,texture=THREE.ImageUtils.loadTexture(image_url,mapping,success,error),this}}(jQuery);